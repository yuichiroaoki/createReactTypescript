[{"D:\\typescript\\firstTypescriptReact\\app\\src\\App.tsx":"1","D:\\typescript\\firstTypescriptReact\\app\\src\\reportWebVitals.ts":"2","D:\\typescript\\firstTypescriptReact\\app\\src\\theme.tsx":"3","D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Home.tsx":"4","D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Header.tsx":"5","D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Contents.tsx":"6","D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Navigator.tsx":"7","D:\\typescript\\firstTypescriptReact\\app\\src\\index.tsx":"8"},{"size":322,"mtime":1609568526448,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1606713974680,"results":"11","hashOfConfig":"10"},{"size":496,"mtime":1609506973632,"results":"12","hashOfConfig":"10"},{"size":1151,"mtime":1609481423303,"results":"13","hashOfConfig":"10"},{"size":2056,"mtime":1609507125600,"results":"14","hashOfConfig":"10"},{"size":1023,"mtime":1609567862703,"results":"15","hashOfConfig":"10"},{"size":5363,"mtime":1609483038657,"results":"16","hashOfConfig":"10"},{"size":500,"mtime":1606713974680,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i35581",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\typescript\\firstTypescriptReact\\app\\src\\App.tsx",[],"D:\\typescript\\firstTypescriptReact\\app\\src\\reportWebVitals.ts",[],"D:\\typescript\\firstTypescriptReact\\app\\src\\theme.tsx",[],"D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Home.tsx",[],"D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Header.tsx",["36"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Navigator from './Navigator';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [isOpen, setDrawer] = React.useState({left: false});\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setDrawer({ ...isOpen, [anchor]: open });\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer(\"left\", true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer open={isOpen[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\r\n            <Navigator />\r\n          </Drawer>\r\n          <Link href=\"/\">\r\n            Typescript React\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n}","D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Contents.tsx",["37","38"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Counter } from \"./Counter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  }\r\n}));\r\n\r\nexport default function Contents() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\">\r\n        Hello\r\n            </Typography>\r\n      <Counter>\r\n        {({ count, setCount }) => (\r\n          <div>\r\n            {count}\r\n            <button onClick={() => setCount(count + 1)}>+</button>\r\n          </div>\r\n        )}\r\n      </Counter>\r\n    </Container>\r\n  );\r\n}","D:\\typescript\\firstTypescriptReact\\app\\src\\components\\Navigator.tsx",[],"D:\\typescript\\firstTypescriptReact\\app\\src\\index.tsx",[],{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":18},{"ruleId":"39","severity":1,"message":"43","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":13},{"ruleId":"39","severity":1,"message":"44","line":29,"column":9,"nodeType":"41","messageId":"42","endLine":29,"endColumn":16},"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'classes' is assigned a value but never used."]